
 ********************************************************************
 * US-align (Version 20220924)                                      *
 * Universal Structure Alignment of Proteins and Nucleic Acids      *
 * Reference: C Zhang, M Shine, AM Pyle, Y Zhang. (2022) Nat Methods*
 * Please email comments and suggestions to yangzhanglab@umich.edu  *
 ********************************************************************

Name of Structure_1: /home/russ/Scripts/git/2023-bioinf-paper/AnnotatedStructuralLibrary/examples/structure_dir/3HDD_B.pdb:B (to be superimposed onto Structure_2)
Name of Structure_2: /home/russ/Scripts/git/2023-bioinf-paper/AnnotatedStructuralLibrary/examples/structure_dir/5UNK_A.pdb:A
Length of Structure_1: 56 residues
Length of Structure_2: 62 residues

Aligned length= 49, RMSD=   2.24, Seq_ID=n_identical/n_aligned= 0.143
TM-score= 0.56005 (normalized by length of Structure_1: L=56, d0=2.48)
TM-score= 0.52817 (normalized by length of Structure_2: L=62, d0=2.67)
(You should use TM-score normalized by length of the reference structure)

(":" denotes residue pairs of d < 5.0 Angstrom, "." denotes other aligned residues)
A---FSSEQLARLKREF-NERNYLTRRRQQLSSEL-G-LNEAQIKIWFQNKRAKI-------RPRTEKK
:   ::::::::::::: ::::::::::::::::: : :::::::::::::::::              
ASMVLSPRDERTLVRKVQINPRTTAKDLVKMLEETGTKVSISTVKRVLYRHNLKGRSARKLE-------

###############	###############	#########
#Aligned atom 1	Aligned atom 2 	Distance#
 CA  ALA B   7 	 CA  ALA A   1 	    3.506
 CA  PHE B   8 	 CA  LEU A   5 	    2.800
 CA  SER B   9 	 CA  SER A   6 	    1.870
 CA  SER B  10 	 CA  PRO A   7 	    2.276
 CA  GLU B  11 	 CA  ARG A   8 	    1.811
 CA  GLN B  12 	 CA  ASP A   9 	    2.056
 CA  LEU B  13 	 CA  GLU A  10 	    2.143
 CA  ALA B  14 	 CA  ARG A  11 	    1.499
 CA  ARG B  15 	 CA  THR A  12 	    0.899
 CA  LEU B  16 	 CA  LEU A  13 	    0.448
 CA  LYS B  17 	 CA  VAL A  14 	    1.936
 CA  ARG B  18 	 CA  ARG A  15 	    2.784
 CA  GLU B  19 	 CA  LYS A  16 	    2.004
 CA  PHE B  20 	 CA  VAL A  17 	    0.568
 CA  ASN B  21 	 CA  ILE A  19 	    1.570
 CA  GLU B  22 	 CA  ASN A  20 	    1.426
 CA  ARG B  24 	 CA  PRO A  21 	    3.098
 CA  ASN B  23 	 CA  ARG A  22 	    2.744
 CA  TYR B  25 	 CA  THR A  23 	    4.845
 CA  LEU B  26 	 CA  THR A  24 	    1.055
 CA  THR B  27 	 CA  ALA A  25 	    4.571
 CA  ARG B  29 	 CA  LYS A  26 	    2.886
 CA  ARG B  30 	 CA  ASP A  27 	    1.801
 CA  ARG B  31 	 CA  LEU A  28 	    3.498
 CA  GLN B  32 	 CA  VAL A  29 	    2.553
 CA  GLN B  33 	 CA  LYS A  30 	    0.649
 CA  LEU B  34 	 CA  MET A  31 	    3.064
 CA  SER B  35 	 CA  LEU A  32 	    3.260
 CA  SER B  36 	 CA  GLU A  33 	    1.439
 CA  GLU B  37 	 CA  GLU A  34 	    3.260
 CA  LEU B  38 	 CA  THR A  35 	    4.838
 CA  GLY B  39 	 CA  THR A  37 	    1.973
 CA  LEU B  40 	 CA  VAL A  39 	    1.464
 CA  ASN B  41 	 CA  SER A  40 	    1.360
 CA  GLU B  42 	 CA  ILE A  41 	    1.707
 CA  ALA B  43 	 CA  SER A  42 	    1.643
 CA  GLN B  44 	 CA  THR A  43 	    1.238
 CA  ILE B  45 	 CA  VAL A  44 	    1.158
 CA  LYS B  46 	 CA  LYS A  45 	    1.350
 CA  ILE B  47 	 CA  ARG A  46 	    1.036
 CA  TRP B  48 	 CA  VAL A  47 	    0.967
 CA  PHE B  49 	 CA  LEU A  48 	    1.326
 CA  GLN B  50 	 CA  TYR A  49 	    1.005
 CA  ASN B  51 	 CA  ARG A  50 	    0.361
 CA  LYS B  52 	 CA  HIS A  51 	    1.327
 CA  ARG B  53 	 CA  ASN A  52 	    1.560
 CA  ALA B  54 	 CA  LEU A  53 	    0.603
 CA  LYS B  55 	 CA  LYS A  54 	    1.309
 CA  ILE B  56 	 CA  GLY A  55 	    2.661
###############	###############	#########
#Total CPU time is  0.01 seconds
------ The rotation matrix to rotate Structure_1 to Structure_2 ------
m               t[m]        u[m][0]        u[m][1]        u[m][2]
0     112.3868340893  -0.2464268089  -0.4461427324  -0.8603664860
1     -16.7295562529  -0.1141124262  -0.8682113365   0.4828948429
2     -17.6115311969  -0.9624199614   0.2171767423   0.1630401195

Code for rotating Structure 1 from (x,y,z) to (X,Y,Z):
for(i=0; i<L; i++)
{
   X[i] = t[0] + u[0][0]*x[i] + u[0][1]*y[i] + u[0][2]*z[i];
   Y[i] = t[1] + u[1][0]*x[i] + u[1][1]*y[i] + u[1][2]*z[i];
   Z[i] = t[2] + u[2][0]*x[i] + u[2][1]*y[i] + u[2][2]*z[i];
}
